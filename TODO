include in the manual that the user must create the fpcs prior to creating the signals or else they won't be able to select the pattern that each signal corresponds to 
include in manual that you don't have to type hz or degrees everytime 
include in manual why you can't just download an fpcs file from the web ftp and then it will say the header is wrong. (it's because you have to import from my application so the application can rewrite the header)
include in manual why you decided not to include functionality for batch files - user can simply create a blank csv using the program, then type in what they want manually (biggest hassle would be just converting their pattern to hex and making sure they all trailing not leading zeros) 
include in manual what broken out code is specifically for ftp
INCLUDE IN PRESENTATION THE ISSUE YOU RAN INTO WITH THE TRAILING ZEROS FOR THE HEX CONVERSION OF THE BITPATTERN. SINCE THE UXG READS THE PATTERN IN TRANSMISSION ORDER, A PATTERN OF 110 NEEDS TO HAVE A TRAILING ZERO (1100) FOR THE HEX CONVERSION, NOT A LEADING ZERO (0110) SINCE IT STARTS READING FROM THE FRONT OF THE PATTERN NOT THE BACK. AKA THAT TRAILING ZERO WILL BE IGNORED
include in manual that files in download folder get deleted if you try to download a file with the same name from the uxg
sepperate the manual into the user's manual and the programmer's manual 
include in manual that when you press "ok" on the new table table you can't immediately go to select a local table and have it will show up since the file is still open
include in manual that user should not try to connect to uxg while it is starting up, otherwise a power cycle will be required for the GUI to be able to reach it. reason is unknown
include in manual that YATG files do not belong in the uploads folder since we will create a file with the identical name in that folder (and then delete it) 

--------------------------------------incorporate Josh's code with yours 
Right now the user has to clear the bitpattern manually if they change the number of freq/phases or the type (phase/freq/both) 
Check with a different UXG whether or not setting your network adapter in promiscuous mode is what allows it to connect (opening wireshark sets it into promicuous mode)
--------------------------------------Test that feeding it to the UXG works after all the changes you've made this week
--------------------------------------Barker codes
--------------------------------------Write code for feeding in a YATG file
--------------------------------------implement "delete table from UXG" button 
--------------------------------------decide on what to do about signal creator tab
go through todo's in the code
--------------------------------------add functionailty to edit previous patterns in a table
--------------------------------------Make table visualization 
--------------------------------------add "clear" button for pattern editing so the current pattern is cleared
figure out why uniform noise doesn't just happen at the one specified freq
double check that freq entries are relative not absolute
--------------------------------------make the state of the first pattern be "off"
--------------------------------------fix the hex conversion so it doesn't chop off bits? 
add in code that lets the user know the max phase value allowed is 180
add in code that tells the user if they've reached the 512 max patterns for batch file entry
--------------------------------------add a "delete all files on uxg" button to the connect to UXG tab
--------------------------------------figure out how to retrieve and parse diagnostic info from the UXG (prolly using status register) to know how it's doing as well as knowing when a file is finished playing for the rotor to know
--------------------------------------allow user to select a file from the UXG to edit, then add functionality so when they upload it first deletes the old one of that name
--------------------------------------Add these SCPI commands to happen after the ftp process uploads a file:
Allow user to choose from list of hostnames or IP's in the "connect to UXG" tab for choosing the current UXG
Using :MEMory:FREE[:ALL]? have the code check if there's enough room on the UXG for the file before uploading it (there's got to be a function with QFile to check the size and make sure there's enough room comparing that size)
Have a startup function routine that does things like turn the display off, turn Modulation On, etc.
Add checks for max length of patterns and table
Add checks for resolution limits of fpcs values (0.01 degree resolution, 1kHz resolution) 
--------------------------------------Add a self-test button on the connect page
--------------------------------------Add a power-off button to the connect page
Add checks for the user inputs that they're in fact numbers when we expect them to be 
change all the qDebug()'s to output on the text window at the bottom of the page
--------------------------------------test that the output signal is in fact using the fpcs using spec analyzer  

add the increment button for that one use-case chris mentioned 
add the paste a bit pattern shit (just convert it to hex and make that the hex value then signal the slot that gets hit when they click upload to table) 
fix the db to dbm shit 
fix the TOA not adding the 270ns shit 
add loading cursor call to the upload and download portions of the code by calling it right before you call the method to download or upload, then undoing it when it returns from that method 
take a look at your setup scpi routine (in ftpManager)

QGuiApplication::setOverrideCursor(QCursor(Qt::WaitCursor));
QGuiApplication::restoreOverrideCursor();
CAN I USE THE FREQ/PHASE TABLE WITH PURE STREAMING AKA NOT FILE STREAMING 


MOST IMPORTANT TODO -------------------------------------------------------------------------------------------------------------------
get default table name to increment everytime you press ok, and save the current number in a txt file so if the program is opened it will know the last one. 
fix issue where blank table populates the table after a nonblank entry has been visualized 
fix the db to dbm shit 
fix the TOA not adding the 270ns shit 
add josh's instructions on deploying an executable to your qt notes (he emailed you alion email the instructions) 
incorporate the increment function Chris Mentioned
make it so they can open a textfile with the bit patterns OR copy and paste a given pattern into a text editor 
add help buttons to the main window Qt::WindowContextHelpButtonHint
chris wants calculation where you take how long it takes for the uxg file to play, then multiple it by the number of positions 
add button for playing a list of files //need to talk to josh about the todo's for that 
fix the fpcs table shit to be really clean code.
add a upload_file_using_ftp method to the YATG class which will use ftp instead of scpi 
documentation 
cleanup git repo before handing it over
add button to create a template YATG file for the user
in the startup set the deliminator to be comma, also go through SCPI notes to see what you forgot to put in the startup routine

instead of scpi or ftp to get PDW's on the uxg is there a faster way of dumping data on there?
scpi just takes forever, creating a csv or txt file out the the yatg file to then do ftp and tell it to convert will take up too much memory (think if they handed you a 1GB YATG
file you'd have to convert it into a csv that's at least a GB to then do ftp and finally tell the uxg to convert it) 

setup a timer to see if our program is what's slow for sending scpi or if it's the UXG.
If it's ours:
find out why 
how big is the scpi buffer on the UXG?
If it's the UXG:
Can we send it all as one scpi?
start investigating using ftp

before you really go balls to the walls trying to figure out this shit: http://rfmw.em.keysight.com/wireless/helpfiles/n519xa/n519xa.htm#User's%20Guide/Streaming-File%20and%20LAN%20Overview.htm%3FTocPath%3DUser's%2520Guide%7CStreaming%2520Mode%2520Use%7C_____11
try setting up ftp first and see how fast it is



Fuck it. Just convert the YATG into a CSV that you'll use ftp to upload to the uxg and tell the UXG to convert it. 














Laptop username : ABMS1.   Password Goldispower1123
https://external.mail.af.mil/owa/
jonathan.kinnard.ctr@us.af.mil
