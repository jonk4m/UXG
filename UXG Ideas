You can manually (typing or Copy paste) enter a bit pattern or import it from text file. 
You can import bit pattern in batch from a text file. 
for multiple bits, it will display how the freq/phases are by default just like the UXG screen shows, but then you can modify each of them
have all the barker codes as a drop-down menu available which will auto-populate the bit pattern
you can duplicate the pattern you just made with a few options of differentiating it in minor ways without having to make a whole new one
Build the FPCS in the GUI or have it be able to import an already existing csv to the UXG 



PROCEEDURE 

//This step adds the CSV file to the UXG's BIN file using the command line
ftp K-N5193A-90114
enter
keysight enter
cd /USER/BIN enter
ls enter
send C:/Users/abms1/Documents/TestTable.csv

//This step imports the csv table values into the current table but does not create a file from those values
MEMory:IMPort:ASCii:FPCSetup TestTable.csv

//store and export both use the SCPI command EXPort. The way it knows to export as a CSV or FPCS and put it in the correct file location accordingly 
//is you have to specify in the file name either .csv or .fpcs
//This step takes the data of the current table and exports it into a FPCS file on the UXG so it can be used later
MEMory:EXPort:ASCii:FPCSetup TestTable.fpcs

//this step sets the current table to the exported FPCS file we just made
SOURce:PULM:STReam:FPCSetup:SELect TestTable.fpcs



	
1 million pulses per second for file streaming but we can go faster with a buffer by putting those onto the FPGS to get faster RPI's. 10 million per sec for list mode (best for very short scenario with very high pulse density)
for pdw streaming from a file, the file is stored on ssd and can be massive. Absolute start time is required for this which is our problem for trying to switch between streaming from different files dynamically. 
list mode is limited to 700,000ish pulses since it's on the FPGA


GET IT SO YOU CAN OPEN AN EXISTING FILE ON THE UXG, THEN WORRY ABOUT VISUALIZING THE TABLES




radio buttons change window_fpcs.settings.usingExistingTableLocal = true;

select File button then gets the filepath and name and sets it to window_fpcs.settings.existingTableFilePath = filePath;
 - this is where we need to display the list of files on the uxg to the user. 
 
the OPEN button sets window_fpcs.settings.usingExistingTable = true; then does initialize_workingFile()

initialize_workingFile() calls initialize_existingFile_local(); (would be initialize_existingFile_onUxg();

initialize_existingFile_local(); creates a QFile from that filepath, checks its header, and sets the streamer
 - 

DONE




when the user presses select file, display the list of fpcs files to the user,
when they select one and click open, tell the UXG to export that fpcs file to a csv. (even if it already exists as a csv it will just overright it)
then use ftpManager.startProcess() to get that file. Then do the initialize_file() shit to rewrite the header and basically rewrite the whole file preserving that data.



















	

